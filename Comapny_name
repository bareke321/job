import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.feature_extraction.text import TfidfTransformer
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import LabelEncoder

# Load the company names dataset
df = pd.read_csv('company_names.csv')

# Create a bag of words matrix using CountVectorizer
vectorizer = CountVectorizer()
bow_matrix = vectorizer.fit_transform(df['name'])

# Transform the bag of words matrix using TfidfTransformer
transformer = TfidfTransformer()
tfidf_matrix = transformer.fit_transform(bow_matrix)

# Convert the parent company column to numerical values using LabelEncoder
le = LabelEncoder()
y = le.fit_transform(df['parent_company'])

# Train a random forest classifier using grid search to find the best hyperparameters
param_grid = {'n_estimators': [10, 50, 100], 'max_depth': [None, 5, 10]}
rf = RandomForestClassifier()
grid_search = GridSearchCV(rf, param_grid, cv=5)
grid_search.fit(tfidf_matrix, y)

# Evaluate the model on the training set
y_pred = grid_search.predict(tfidf_matrix)
accuracy = accuracy_score(y, y_pred)
print("Training accuracy: {:.2f}".format(accuracy))
